services:
  db:
    build:
      context: ./database # Reference the database directory
    container_name: pokemon-db
    restart: always
    environment:
      POSTGRES_DB: pokemon_db
      POSTGRES_USER: pokemon_user
      POSTGRES_PASSWORD: pokemon_pass
      PGPORT: 3011
    ports:
      - "3011:3011"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql # Ensure schema initialization
      - ./database/seed_pokemon.py:/docker-entrypoint-initdb.d/seed_pokemon.py # Run seed script

  backend:
    build:
      context: ./pokemon-service # Reference the backend service directory
    container_name: pokemon-api
    restart: always
    depends_on:
      - db # Ensures the database starts before the backend
    environment:
      PORT: 3010
      POSTGRES_DB: pokemon_db
      POSTGRES_USER: pokemon_user
      POSTGRES_PASSWORD: pokemon_pass
      PGPORT: 3011
      POSTGRES_HOST: db # The service name is used as the hostname inside Docker
    ports:
      - "3010:3010"
    volumes:
      - ./pokemon-service:/app # Mounts the project folder for live updates
    command: ["npm", "run", "dev"] # Runs the service in development mode

volumes:
  postgres_data:
